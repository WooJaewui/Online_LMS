
 공통 모듈 분석.



 # 공통 모듈의 개요.

공통 모듈의 개념.
시스템을 구축 시 여러 서브 시스템에서 공통으로 사용되는 모듈을 모아놓은 소프트웨어 묶음.
중복 구현을 줄여주고 재사용성을 높이기 위한 라이브러리.

공통 모듈의 사용 목적.
모듈 간 표준화.
재사용.
중복 개발 방지.

응집도.
모듈 안의 구성 요소들이 공동의 목적을 달성하기 위하여 관련되어 있는 정도.
한 모듈이 단일 기능을 갖도록 설계.
응집도를 높여야 공통 모듈의 품질을 높일 수 있다.

결합도.
하나의 모듈과 다른 모듈의 상호 의존 정도.
모듈 간의 결합도를 낮게 설계해야 공통 모듈의 품질이 높아짐.

공통 모듈 구현 방식.
클래스, 라이브러리, 컴포넌트, 프레임워크 형태로 구현.

클래스.
공통 모듈을 실제로 구현한 객체.
공통 모듈이 존재할 수 있는 가장 기본적인 형태.

라이브러리.
클래스가 여러 개 합쳐진 묶음.

컴포넌트.
소프트웨어 라이브러리에서 조금 발전된 형태.
내/외부 인터페이스를 지니고 있고, 라이브러리가 체계화된 형태의 소프트웨어.

프레임워크.
여러 가지 기능을 하는 클래스들이 서로 유기적인 관계를 맺으면서 기능을 수행하는 컴포넌트 또는 클래스 집합.



 # 공통 모듈 분석 방법.

공통 모듈 분석 방법의 종류.
유스케이스 & 클래스 상관도 분석.
유스케이스 분석.
CRUD 매트릭스 분석.

유스케이스 & 클래스 상관도 분석.
유스케이스와 Entity 클래스간의 상호 참조 관계를 분석하는 방식.

공통 유스케이스와 공통 클래스 추출.
include : 무조건 유스케이스를 사용한다. 
extends : 상황에 따라 유스케이스를 사용한다.

CRUD 매트릭스.
CRUD 매트릭스를 통해 모든 유스케이스에서 사용되는 공통 모듈을 추출할 수 있다.





