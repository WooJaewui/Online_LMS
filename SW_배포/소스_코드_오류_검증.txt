
 소스 코드 오류 검증 - SW 배포.



 # 주요 용어 정의.

용어.
정적 오류 검증 : 잠재적 문제점을 개발자 본인을 포함한 동료 개발자, Tester, PM 등이 점검하는 행위.
Inspection : 정해진 장소에 미리 선정된 인원이 참가하여 격식을 갖춘 정적 Test 방법.
검증 자동화 : 소스 코드에 대한 정적 오류 검증을 규칙에 따라 자동적으로 검증하는 기법.
정적 Test : 프로그램 실행 없이 구조 및 과정 등을 분석하여 검증하는 방법.
SW Test : 결함( fault )을 찾기 위해 소프트웨어를 작동시키는 일련의 행위와 절차.
PM( Product Manager ) : 제품과 관련된 모든 활동을 담당하고 관리하며 책임을 지는 사람이다.



 # 소스 코드 오류 검증 개요.

소스 코드 오류 검증 정의.
개발된 소스 코드에 존재할 수 있는 오류를 발견, 수정하는 일련의 행위.
일반적으로 동료 개발자, 개발 유경험자, PM, Tester 등의 이해관계자가 함께 수행.

소스 코드 오류 검증 배경.
snowball 효과 : bug는 시간이 지날수록 해결하기가 더 힘들어진다.

소스 코드 오류 검증 효과.
미기능 구현 : 누락된 사용자 요구기능 확인 & 추가 구현.
Bug 원인 발견 : 개발자가 인지한 Bug의 원인 규명.
Logic 점검 : 기능 동작 Sequence, 범위, Spec의 적절성 확인.
예외처리 적용 : 개발자가 인지하지 못한 예외처리 대상의 발견.
타당성 : 개발 순서, 일정, 도구 드으이 개발 체계의 적절성 평가.
저작권 보장 : OSS에 대한 법적 분쟁 사전 대응.



 # 소스 코드 오류 검증 Focus.

소스 코드 오류 검증 절차. ( Insepection 기준 )
계획수립 : 검증 대상 선정, 검증 범위, 일정 수립, 검증 주체 결정.
검증 사항 공지 : 사전 공지, 검증 주체 조정.
범위 설명 : 검증 대상 소개, Target 설명, Focus 설명, Sequence 설명.
Inspection : 이해관계자 점검, 점검 결과 보고서 작성.
수정 : 점검 결과 반영, 조치 결과 보고서 작성.
반영 : SW Packaging.

소스 코드 오류 검증 주안점. ( 원칙 )
집중 : 목적에 집중, 범위 외 내용에 대해 언급 자제.
충분한 여유 : 검증 주체들에 대한 시간 확보.
문서화 : 언급 내용, 지적 사항, 조치 방향 방법 명세.
평가 금지 : Inspection 결과를 인사 고과에 반영 금지. ( 가장 중요 )
예의 유지 : 개발자의 의도, 수행 이력, 대안 도출 방법 존중.



 # 자동 소스 코드 검증.

자동 검증 도구 제공 기능.
Coding Convention 적용 : 개발 조직에 적용 중인 Coding 규칙 적용.
잠재적 위험 발견 : Buffer Overflow, Memory Leak 발견.
예외처리 적용 : 개발자가 인지하지 못한 예외처리 대상의 발견.
input Value 검사 : 변수별 할당 가능 범위 자동 검증.
문법 검사 : 개발 언어별 문법 검사.
미사용 소스 코드 도출 : 경우의 수에 따른 Deadcode 도출.
저작권 검사 : OSS( Open Source Software ) 기반 저작권 정책 위반 여부 검사.
Revision 관리 : 검증 결과의 History 관리.

자동 검증 도구의 한계점.
요구사항 충족성 확인 불가 : Validation은 불가 ( 과정 )
예외처리 내역 미인지 : 개발자만의 성향이 반영된 예외처리를 미인지.
수학적 알고리즘 평가 불가 : 암호 알고리즘, 인공 지능 등의 확률적 평가 결과 도출 불가.
Library 연동 미인지 : System 공용 API에 대한 예외처리 미수행.
물리적 장치 예상 범위 미인지 : 물리적 Sensing 결과에 대한 검증 불가.








